{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { data } from \"../data\";\nimport axios from \"axios\";\nconst fetchData = async () => {\n  try {\n    const response = await fetch(`${process.env.PUBLIC_URL}/data.json`);\n    console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\nfetchData();\nconst initialState = {\n  value: data\n};\nexport const userSlice = createSlice({\n  name: \"Users\",\n  initialState,\n  reducers: {\n    addUser: (state, action) => {\n      state.value.push(action.payload);\n    },\n    deleteUser: (state, action) => {\n      state.value = state.value.filter(user => user.id !== action.payload.id);\n    },\n    updateUser: (state, action) => {\n      state.value.map(user => {\n        if (user.id === action.payload.id) {\n          user.name = action.payload.name;\n          user.username = action.payload.username;\n        }\n      });\n    }\n  }\n});\nexport const {\n  addUser,\n  deleteUser,\n  updateUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","data","axios","fetchData","response","fetch","process","env","PUBLIC_URL","console","log","error","initialState","value","userSlice","name","reducers","addUser","state","action","push","payload","deleteUser","filter","user","id","updateUser","map","username","actions","reducer"],"sources":["C:/Users/efsan/Desktop/ReactYeni/25Åžubat/redux-toolkit/src/features/Users.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {data}  from \"../data\"\r\nimport axios from \"axios\";\r\n\r\nconst fetchData = async () => {\r\n    try {\r\n        const response = await fetch(`${process.env.PUBLIC_URL}/data.json`);\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  \r\n  fetchData();\r\n\r\nconst initialState={\r\n  value:data\r\n}\r\nexport const userSlice=createSlice({\r\nname:\"Users\",\r\ninitialState,\r\nreducers:{\r\n    addUser:(state,action)=>{\r\n        state.value.push(action.payload)\r\n    },\r\n    deleteUser:(state,action)=>{\r\n        state.value=state.value.filter((user)=>user.id!==action.payload.id)\r\n    },\r\n\r\n    updateUser:(state,action)=>{\r\n        state.value.map((user)=>{\r\n            if (user.id === action.payload.id) {\r\n               user.name=action.payload.name\r\n               user.username=action.payload.username  \r\n            }\r\n        })\r\n    }\r\n}\r\n})\r\nexport const { addUser, deleteUser,updateUser } = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,IAAI,QAAQ,SAAS;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC1B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,UAAW,YAAW,CAAC;IACrEC,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;EACnB,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACpB;AACF,CAAC;AAEDR,SAAS,EAAE;AAEb,MAAMS,YAAY,GAAC;EACjBC,KAAK,EAACZ;AACR,CAAC;AACD,OAAO,MAAMa,SAAS,GAACd,WAAW,CAAC;EACnCe,IAAI,EAAC,OAAO;EACZH,YAAY;EACZI,QAAQ,EAAC;IACLC,OAAO,EAACA,CAACC,KAAK,EAACC,MAAM,KAAG;MACpBD,KAAK,CAACL,KAAK,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACpC,CAAC;IACDC,UAAU,EAACA,CAACJ,KAAK,EAACC,MAAM,KAAG;MACvBD,KAAK,CAACL,KAAK,GAACK,KAAK,CAACL,KAAK,CAACU,MAAM,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAGN,MAAM,CAACE,OAAO,CAACI,EAAE,CAAC;IACvE,CAAC;IAEDC,UAAU,EAACA,CAACR,KAAK,EAACC,MAAM,KAAG;MACvBD,KAAK,CAACL,KAAK,CAACc,GAAG,CAAEH,IAAI,IAAG;QACpB,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,EAAE;UAChCD,IAAI,CAACT,IAAI,GAACI,MAAM,CAACE,OAAO,CAACN,IAAI;UAC7BS,IAAI,CAACI,QAAQ,GAACT,MAAM,CAACE,OAAO,CAACO,QAAQ;QACxC;MACJ,CAAC,CAAC;IACN;EACJ;AACA,CAAC,CAAC;AACF,OAAO,MAAM;EAAEX,OAAO;EAAEK,UAAU;EAACI;AAAW,CAAC,GAAGZ,SAAS,CAACe,OAAO;AACnE,eAAef,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}